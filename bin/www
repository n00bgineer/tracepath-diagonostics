// IMPORTING MODULES/PACKAGES
const debug = require('debug')('diagonostics:server')
const path = require('path')
const app = require('../app')
const http = require('http')

const env = require('dotenv').config({
  path: path.join(path.dirname(__dirname), '.env'),
})

// GETTING PORT FROM ENVIRONMENT & SETTING IT FOR EXPRESS
const port = normalizePort(process.env.SERVER_PORT || '3000')
app.set('port', port)

// CREATING HTTP SERVER
const server = http.createServer(app)

// Listen on provided port, on all network interfaces
server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

// METHODS
// NORMALISE PORT NO.
function normalizePort(val) {
  const port = parseInt(val, 10)
  if (isNaN(port)) return val
  if (port >= 0) return port
  return false
}

// Event listener for HTTP server "error" event
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const bind = typeof port === 'string' ? 'PIPE ' + port : 'PORT ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' REQUIRES ELEVATED PREVILIGES')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' IS ALREADY IN US')
      process.exit(1)
      break
    default:
      throw error
  }
}

// Event listener for HTTP server "listening" event
function onListening() {
  const addr = server.address()
  const bind = typeof addr === 'string' ? 'PIPE ' + addr : 'PORT ' + addr.port
  debug('LISTENING ON ' + bind)
}
